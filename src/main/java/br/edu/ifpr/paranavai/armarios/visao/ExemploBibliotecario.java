/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.ifpr.paranavai.armarios.visao;

import br.edu.ifpr.paranavai.armarios.controle.BibliotecarioControle;
import br.edu.ifpr.paranavai.armarios.modelo.Bibliotecario;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yuri_
 */
public class ExemploBibliotecario extends javax.swing.JFrame {
    
     private List<Bibliotecario> listaBibliotecario;

    /**
     * Creates new form ExemploBibliotecario
     */


       public ExemploBibliotecario() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.listaBibliotecario = BibliotecarioControle.listarTodasBibliotecario();
//        populaTabela();
        populaCorreto(this.listaBibliotecario);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        txtFiltro = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Novo = new javax.swing.JButton();
        Alterar = new javax.swing.JButton();
        Excluir = new javax.swing.JButton();
        Voltar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBibliotecario = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome");

        Novo.setText("Novo");
        Novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NovoActionPerformed(evt);
            }
        });

        Alterar.setText("Alterar");
        Alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlterarActionPerformed(evt);
            }
        });

        Excluir.setText("Excluir");
        Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirActionPerformed(evt);
            }
        });

        Voltar.setText("Voltar");
        Voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(Novo)
                .addGap(18, 18, 18)
                .addComponent(Alterar)
                .addGap(30, 30, 30)
                .addComponent(Excluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Voltar)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Novo)
                    .addComponent(Alterar)
                    .addComponent(Excluir)
                    .addComponent(Voltar))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        tblBibliotecario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Telefone", "SIAPE", "Email", "Senha", "Ativo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblBibliotecario);
        if (tblBibliotecario.getColumnModel().getColumnCount() > 0) {
            tblBibliotecario.getColumnModel().getColumn(5).setResizable(false);
        }

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        List<Bibliotecario> listaAtualizada = new ArrayList<>();
        for (int i = 0; i < this.listaBibliotecario.size(); i++) {
            if (this.listaBibliotecario.get(i).getNome().contains(txtFiltro.getText())) {
                listaAtualizada.add(this.listaBibliotecario.get(i));
            }
        }
        this.populaCorreto(listaAtualizada);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirActionPerformed
        if (tblBibliotecario.getSelectedRow() >= 0) {
            int dadosLinha = tblBibliotecario.getSelectedRow();
            int codigo = (int) tblBibliotecario.getModel().getValueAt(dadosLinha, 0);
            
            for (Bibliotecario bibliotecario : this.listaBibliotecario) {
                if(bibliotecario.getPessoaId() == codigo)
                    BibliotecarioControle.excluir(bibliotecario);
            }
            
            this.listaBibliotecario = BibliotecarioControle.listarTodasBibliotecario();
            populaCorreto(listaBibliotecario);
        }
    }//GEN-LAST:event_ExcluirActionPerformed

    private void NovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NovoActionPerformed
       FormularioBibliotecario form = new FormularioBibliotecario();
        form.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_NovoActionPerformed

    private void VoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarActionPerformed
        new TelaInicial().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_VoltarActionPerformed

    private void AlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlterarActionPerformed
        if (tblBibliotecario.getSelectedRow() >= 0) {
            int dadosLinha = tblBibliotecario.getSelectedRow();
            int codigo = (int) tblBibliotecario.getModel().getValueAt(dadosLinha, 0);
            
            for (Bibliotecario bibliotecario : this.listaBibliotecario) {
                if(bibliotecario.getPessoaId() == codigo){
                    // abrir um formul√°rio para alteracao
                    FormularioBibliotecario form = new FormularioBibliotecario(bibliotecario);
                    form.setVisible(true);
                    this.setVisible(false);
                    this.dispose();
                }
            }
            
            this.listaBibliotecario = BibliotecarioControle.listarTodasBibliotecario();
            populaCorreto(listaBibliotecario);
        }
    }//GEN-LAST:event_AlterarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExemploBibliotecario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExemploBibliotecario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExemploBibliotecario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExemploBibliotecario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExemploBibliotecario().setVisible(true);
            }
        });
        
        /*private void populaTabela() {
        List<Bibliotecario> lista = new ArrayList<>();
        String sql = "SELECT * FROM tb_bibliotecario";
        
        DefaultTableModel modeloDeColunasDaTabela = (DefaultTableModel) tblBibliotecario.getModel();
        
        while (modeloDeColunasDaTabela.getRowCount() != 0) {
            modeloDeColunasDaTabela.removeRow(0);
        }
        
        try {
            PreparedStatement preparedStatement = Conexao.getConexao().prepareStatement(sql);
            ResultSet resultado = preparedStatement.executeQuery();
            while (resultado.next()) {
                Object[] dadosLinha = new Object[7];
                dadosLinha[0] = resultado.getInt("id_localizacao");
                dadosLinha[1] = resultado.getString("nome");
                dadosLinha[2] = resultado.getString("telefone");
                dadosLinha[3] = resultado.getString("siape");
                dadosLinha[4] = resultado.getString("email");
                dadosLinha[5] = resultado.getString("senha");
                dadosLinha[6] = resultado.getBoolean("ativo");
                modeloDeColunasDaTabela.addRow(dadosLinha);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        */
        
    }
    
        private void populaCorreto(List<Bibliotecario> listaBibliotecario) {
        DefaultTableModel modeloDeColunasDaTabela = (DefaultTableModel) tblBibliotecario.getModel();
        
        while (modeloDeColunasDaTabela.getRowCount() != 0) {
            modeloDeColunasDaTabela.removeRow(0);
        }
        
        for (Bibliotecario bibliotecario : listaBibliotecario) {
            Object[] dadosLinha = new Object[7];
            dadosLinha[0] = bibliotecario.getPessoaId();
            dadosLinha[1] = bibliotecario.getNome();
            dadosLinha[2] = bibliotecario.getTelefone();
            dadosLinha[3] = bibliotecario.getSiape();
            dadosLinha[4] = bibliotecario.getEmail();
            dadosLinha[5] = bibliotecario.getSenha();
            dadosLinha[6] = bibliotecario.isAtivo();
            modeloDeColunasDaTabela.addRow(dadosLinha);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Alterar;
    private javax.swing.JButton Excluir;
    private javax.swing.JButton Novo;
    private javax.swing.JButton Voltar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblBibliotecario;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables
}

